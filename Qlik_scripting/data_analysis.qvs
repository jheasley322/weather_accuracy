SET ThousandSep=',';
SET DecimalSep='.';
SET MoneyThousandSep=',';
SET MoneyDecimalSep='.';
SET MoneyFormat='$#,##0.00;-$#,##0.00';
SET TimeFormat='h:mm tt';
SET DateFormat='M/D/YYYY';
SET TimestampFormat='M/D/YYYY h:mm:ss[.fff] TT';
SET FirstWeekDay=6;
SET BrokenWeeks=1;
SET ReferenceDay=0;
SET FirstMonthOfYear=1;
SET CollationLocale='en-US';
SET CreateSearchIndexOnReload=1;
SET MonthNames='Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec';
SET LongMonthNames='January;February;March;April;May;June;July;August;September;October;November;December';
SET DayNames='Mon;Tue;Wed;Thu;Fri;Sat;Sun';
SET LongDayNames='Monday;Tuesday;Wednesday;Thursday;Friday;Saturday;Sunday';
SET NumericalAbbreviation='3:k;6:M;9:G;12:T;15:P;18:E;21:Z;24:Y;-3:m;-6:Î¼;-9:n;-12:p;-15:f;-18:a;-21:z;-24:y';


let path = '*';


actuals:
LOAD
    timestamp#(ExtractionTimeStamp,'YYYYMMDD hh:mm tt') as Actual_Time,
    place,
    "order",
    cloudCoverPhrase,
    obsQualifierCode,
    obsQualifierSeverity,
    precip1Hour,
    snow1Hour,
    temperature,
    windSpeed,
    wxPhraseLong
FROM [lib://QlikDataOnServer (auth0_joeeasley@odysseylogistics.com)/WEATHER/WEATHER.COM/ACTUAL_ROCKHILL_$(path).qvd](qvd)
where len(trim(ExtractionTimeStamp))>0;

Actual_Temp:
Mapping Load
	Actual_Time&'|'&place as ID,
    temperature
Resident actuals;

Actual_Wind:
Mapping Load
	Actual_Time&'|'&place as ID,
    windSpeed
Resident actuals;

Actual_Precip:
Mapping Load
	Actual_Time&'|'&place as ID,
    precip1Hour
Resident actuals;

Actual_Cond:
Mapping Load
	Actual_Time&'|'&place as ID,
    wxPhraseLong
Resident actuals;


Drop Table actuals;

forecasts_temporary:
LOAD
	1 as _ct_forecast,
    timestamp#(ExtractionTimeStamp,'YYYYMMDD hh:mm tt') as Forecast_Time,
    place as Forecast_Place,
    timestamp(left(fcst_valid_local,19),'YYYYMMDD hh:mm tt') as Prediction_Time,
    fcst_valid_local,
    interval(timestamp(left(fcst_valid_local,19),'YYYYMMDD hh:mm tt')-timestamp#(ExtractionTimeStamp,'YYYYMMDD hh:mm tt'),'hh') as temporal_gap,
    "num",
    temp as Temperature_Forecast,
    applymap('Actual_Temp',timestamp(left(fcst_valid_local,19),'YYYYMMDD hh:mm tt')&'|'&place,'not found') as Temperature_Actual,
    phrase_32char as Conditions_Forecast,
    applymap('Actual_Cond',timestamp(left(fcst_valid_local,19),'YYYYMMDD hh:mm tt')&'|'&place,'not found') as Conditions_Actual,
    pop as Precipitation_Forecast,
    applymap('Actual_Precip',timestamp(left(fcst_valid_local,19),'YYYYMMDD hh:mm tt')&'|'&place,'not found') as Precipitation_Actual,
    precip_type,
    wspd as Wind_Forecast,
    applymap('Actual_Wind',timestamp(left(fcst_valid_local,19),'YYYYMMDD hh:mm tt')&'|'&place,'not found') as Wind_Actual
FROM [lib://QlikDataOnServer (auth0_joeeasley@odysseylogistics.com)/WEATHER/WEATHER.COM/FORECAST_ROCKHILL_$(path).qvd](qvd);

//(n-o)/o

NoConcatenate
forecasts:
Load
	*,
    (Wind_Actual-Wind_Forecast)/Wind_Forecast as _wind_pct_diff,
    (Temperature_Actual-Temperature_Forecast)/Temperature_Forecast as _temp_pct_diff,
	if(Conditions_Actual = Conditions_Forecast,1,0) as _match_cond,
//     if(Wind_Actual = Wind_Forecast,1,0) as _match_wind,
    if(fabs(Wind_Actual-Wind_Forecast)<=1,1,0) as _match_wind,
    
//     if(Temperature_Actual = Temperature_Forecast,1,0) as _match_temp,
    if(fabs(Temperature_Actual-Temperature_Forecast)<=2,1,0) as _match_temp,
    
    if(
      if(Precipitation_Actual>0,1,0) 
      = 
      if(Precipitation_Forecast>=60,1,0),
    1,0) as _match_precip,
    Date(Forecast_Time) as "Date of Forecast",
    Date(Prediction_Time) as "Date being Forecast",
    Time(Forecast_Time) as "Time of Forecast",
    Time(Prediction_Time) as "Time being Forecast"
Resident forecasts_temporary;
drop table forecasts_temporary;

